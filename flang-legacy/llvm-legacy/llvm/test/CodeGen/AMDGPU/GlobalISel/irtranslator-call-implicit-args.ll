; NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
; RUN: llc -global-isel -stop-after=irtranslator -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx900 -verify-machineinstrs -o - %s | FileCheck -enable-var-scope -check-prefix=GFX900 %s
; RUN: llc -global-isel -stop-after=irtranslator -mtriple=amdgcn-mesa-mesa3d -mcpu=gfx908 -verify-machineinstrs -o - %s | FileCheck -enable-var-scope -check-prefix=GFX908 %s

; Workitem IDs are passed to the kernel differently for gfx908

declare hidden void @external_void_func_void() #0
declare hidden void @external_void_func_i32(i32) #0
declare hidden void @external_void_func_v32i32(<32 x i32>) #0

define amdgpu_kernel void @test_call_external_void_func_i32([17 x i8]) #0 {
  ; GFX900-LABEL: name: test_call_external_void_func_i32
  ; GFX900: bb.1 (%ir-block.1):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr1, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   [[INT:%[0-9]+]]:_(p4) = G_INTRINSIC intrinsic(@llvm.amdgcn.kernarg.segment.ptr)
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 20
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY10]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]](s32)
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY16]], [[C2]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY15]], [[SHL]]
  ; GFX900-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX900-NEXT:   [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY17]], [[C3]](s32)
  ; GFX900-NEXT:   [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY18]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY9]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY11]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY14]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR1]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_call_external_void_func_i32
  ; GFX908: bb.1 (%ir-block.1):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr1, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   [[INT:%[0-9]+]]:_(p4) = G_INTRINSIC intrinsic(@llvm.amdgcn.kernarg.segment.ptr)
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 20
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY10]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]](s32)
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY16]], [[C2]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY15]], [[SHL]]
  ; GFX908-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX908-NEXT:   [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY17]], [[C3]](s32)
  ; GFX908-NEXT:   [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY18]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY9]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY11]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY14]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR1]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

define void @test_func_call_external_void_func_i32() #0 {
  ; GFX900-LABEL: name: test_func_call_external_void_func_i32
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $sgpr15, $vgpr31, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9, $sgpr10_sgpr11
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr31
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32(s32) = PRED_COPY $sgpr15
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr10_sgpr11
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 99
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]]
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $sgpr0_sgpr1_sgpr2_sgpr3
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY18]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY9]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[PRED_COPY10]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PRED_COPY11]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY12]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY14]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY15]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[PRED_COPY16]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[PRED_COPY17]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   SI_RETURN
  ; GFX908-LABEL: name: test_func_call_external_void_func_i32
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $sgpr15, $vgpr31, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9, $sgpr10_sgpr11
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr31
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32(s32) = PRED_COPY $sgpr15
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr10_sgpr11
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 99
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]]
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $sgpr0_sgpr1_sgpr2_sgpr3
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY18]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY9]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[PRED_COPY10]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PRED_COPY11]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY12]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY14]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY15]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[PRED_COPY16]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[PRED_COPY17]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   SI_RETURN
  call void @external_void_func_i32(i32 99)
  ret void
}

; Explicit argument is split between registers ad the stack due to v31
; being used for workitem IDs.
define amdgpu_kernel void @test_call_external_void_func_v32i32([17 x i8]) #0 {
  ; GFX900-LABEL: name: test_call_external_void_func_v32i32
  ; GFX900: bb.1 (%ir-block.1):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr1, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[BUILD_VECTOR:%[0-9]+]]:_(<32 x s32>) = G_BUILD_VECTOR [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32)
  ; GFX900-NEXT:   [[INT:%[0-9]+]]:_(p4) = G_INTRINSIC intrinsic(@llvm.amdgcn.kernarg.segment.ptr)
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_v32i32
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 20
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY10]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]](s32)
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY16]], [[C2]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY15]], [[SHL]]
  ; GFX900-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX900-NEXT:   [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY17]], [[C3]](s32)
  ; GFX900-NEXT:   [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
  ; GFX900-NEXT:   [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32), [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32), [[UV6:%[0-9]+]]:_(s32), [[UV7:%[0-9]+]]:_(s32), [[UV8:%[0-9]+]]:_(s32), [[UV9:%[0-9]+]]:_(s32), [[UV10:%[0-9]+]]:_(s32), [[UV11:%[0-9]+]]:_(s32), [[UV12:%[0-9]+]]:_(s32), [[UV13:%[0-9]+]]:_(s32), [[UV14:%[0-9]+]]:_(s32), [[UV15:%[0-9]+]]:_(s32), [[UV16:%[0-9]+]]:_(s32), [[UV17:%[0-9]+]]:_(s32), [[UV18:%[0-9]+]]:_(s32), [[UV19:%[0-9]+]]:_(s32), [[UV20:%[0-9]+]]:_(s32), [[UV21:%[0-9]+]]:_(s32), [[UV22:%[0-9]+]]:_(s32), [[UV23:%[0-9]+]]:_(s32), [[UV24:%[0-9]+]]:_(s32), [[UV25:%[0-9]+]]:_(s32), [[UV26:%[0-9]+]]:_(s32), [[UV27:%[0-9]+]]:_(s32), [[UV28:%[0-9]+]]:_(s32), [[UV29:%[0-9]+]]:_(s32), [[UV30:%[0-9]+]]:_(s32), [[UV31:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[BUILD_VECTOR]](<32 x s32>)
  ; GFX900-NEXT:   [[AMDGPU_WAVE_ADDRESS:%[0-9]+]]:_(p5) = G_AMDGPU_WAVE_ADDRESS $sp_reg
  ; GFX900-NEXT:   [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[PTR_ADD1:%[0-9]+]]:_(p5) = G_PTR_ADD [[AMDGPU_WAVE_ADDRESS]], [[C4]](s32)
  ; GFX900-NEXT:   G_STORE [[UV31]](s32), [[PTR_ADD1]](p5) :: (store (s32) into stack, align 16, addrspace 5)
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[UV]](s32)
  ; GFX900-NEXT:   $vgpr1 = PRED_COPY [[UV1]](s32)
  ; GFX900-NEXT:   $vgpr2 = PRED_COPY [[UV2]](s32)
  ; GFX900-NEXT:   $vgpr3 = PRED_COPY [[UV3]](s32)
  ; GFX900-NEXT:   $vgpr4 = PRED_COPY [[UV4]](s32)
  ; GFX900-NEXT:   $vgpr5 = PRED_COPY [[UV5]](s32)
  ; GFX900-NEXT:   $vgpr6 = PRED_COPY [[UV6]](s32)
  ; GFX900-NEXT:   $vgpr7 = PRED_COPY [[UV7]](s32)
  ; GFX900-NEXT:   $vgpr8 = PRED_COPY [[UV8]](s32)
  ; GFX900-NEXT:   $vgpr9 = PRED_COPY [[UV9]](s32)
  ; GFX900-NEXT:   $vgpr10 = PRED_COPY [[UV10]](s32)
  ; GFX900-NEXT:   $vgpr11 = PRED_COPY [[UV11]](s32)
  ; GFX900-NEXT:   $vgpr12 = PRED_COPY [[UV12]](s32)
  ; GFX900-NEXT:   $vgpr13 = PRED_COPY [[UV13]](s32)
  ; GFX900-NEXT:   $vgpr14 = PRED_COPY [[UV14]](s32)
  ; GFX900-NEXT:   $vgpr15 = PRED_COPY [[UV15]](s32)
  ; GFX900-NEXT:   $vgpr16 = PRED_COPY [[UV16]](s32)
  ; GFX900-NEXT:   $vgpr17 = PRED_COPY [[UV17]](s32)
  ; GFX900-NEXT:   $vgpr18 = PRED_COPY [[UV18]](s32)
  ; GFX900-NEXT:   $vgpr19 = PRED_COPY [[UV19]](s32)
  ; GFX900-NEXT:   $vgpr20 = PRED_COPY [[UV20]](s32)
  ; GFX900-NEXT:   $vgpr21 = PRED_COPY [[UV21]](s32)
  ; GFX900-NEXT:   $vgpr22 = PRED_COPY [[UV22]](s32)
  ; GFX900-NEXT:   $vgpr23 = PRED_COPY [[UV23]](s32)
  ; GFX900-NEXT:   $vgpr24 = PRED_COPY [[UV24]](s32)
  ; GFX900-NEXT:   $vgpr25 = PRED_COPY [[UV25]](s32)
  ; GFX900-NEXT:   $vgpr26 = PRED_COPY [[UV26]](s32)
  ; GFX900-NEXT:   $vgpr27 = PRED_COPY [[UV27]](s32)
  ; GFX900-NEXT:   $vgpr28 = PRED_COPY [[UV28]](s32)
  ; GFX900-NEXT:   $vgpr29 = PRED_COPY [[UV29]](s32)
  ; GFX900-NEXT:   $vgpr30 = PRED_COPY [[UV30]](s32)
  ; GFX900-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY18]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY9]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY11]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY14]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR1]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_v32i32, csr_amdgpu, implicit $vgpr0, implicit $vgpr1, implicit $vgpr2, implicit $vgpr3, implicit $vgpr4, implicit $vgpr5, implicit $vgpr6, implicit $vgpr7, implicit $vgpr8, implicit $vgpr9, implicit $vgpr10, implicit $vgpr11, implicit $vgpr12, implicit $vgpr13, implicit $vgpr14, implicit $vgpr15, implicit $vgpr16, implicit $vgpr17, implicit $vgpr18, implicit $vgpr19, implicit $vgpr20, implicit $vgpr21, implicit $vgpr22, implicit $vgpr23, implicit $vgpr24, implicit $vgpr25, implicit $vgpr26, implicit $vgpr27, implicit $vgpr28, implicit $vgpr29, implicit $vgpr30, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 4, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_call_external_void_func_v32i32
  ; GFX908: bb.1 (%ir-block.1):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr1, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[BUILD_VECTOR:%[0-9]+]]:_(<32 x s32>) = G_BUILD_VECTOR [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32)
  ; GFX908-NEXT:   [[INT:%[0-9]+]]:_(p4) = G_INTRINSIC intrinsic(@llvm.amdgcn.kernarg.segment.ptr)
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_v32i32
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 20
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY10]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]](s32)
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY16]], [[C2]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY15]], [[SHL]]
  ; GFX908-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX908-NEXT:   [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY17]], [[C3]](s32)
  ; GFX908-NEXT:   [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
  ; GFX908-NEXT:   [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32), [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32), [[UV6:%[0-9]+]]:_(s32), [[UV7:%[0-9]+]]:_(s32), [[UV8:%[0-9]+]]:_(s32), [[UV9:%[0-9]+]]:_(s32), [[UV10:%[0-9]+]]:_(s32), [[UV11:%[0-9]+]]:_(s32), [[UV12:%[0-9]+]]:_(s32), [[UV13:%[0-9]+]]:_(s32), [[UV14:%[0-9]+]]:_(s32), [[UV15:%[0-9]+]]:_(s32), [[UV16:%[0-9]+]]:_(s32), [[UV17:%[0-9]+]]:_(s32), [[UV18:%[0-9]+]]:_(s32), [[UV19:%[0-9]+]]:_(s32), [[UV20:%[0-9]+]]:_(s32), [[UV21:%[0-9]+]]:_(s32), [[UV22:%[0-9]+]]:_(s32), [[UV23:%[0-9]+]]:_(s32), [[UV24:%[0-9]+]]:_(s32), [[UV25:%[0-9]+]]:_(s32), [[UV26:%[0-9]+]]:_(s32), [[UV27:%[0-9]+]]:_(s32), [[UV28:%[0-9]+]]:_(s32), [[UV29:%[0-9]+]]:_(s32), [[UV30:%[0-9]+]]:_(s32), [[UV31:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[BUILD_VECTOR]](<32 x s32>)
  ; GFX908-NEXT:   [[AMDGPU_WAVE_ADDRESS:%[0-9]+]]:_(p5) = G_AMDGPU_WAVE_ADDRESS $sp_reg
  ; GFX908-NEXT:   [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[PTR_ADD1:%[0-9]+]]:_(p5) = G_PTR_ADD [[AMDGPU_WAVE_ADDRESS]], [[C4]](s32)
  ; GFX908-NEXT:   G_STORE [[UV31]](s32), [[PTR_ADD1]](p5) :: (store (s32) into stack, align 16, addrspace 5)
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[UV]](s32)
  ; GFX908-NEXT:   $vgpr1 = PRED_COPY [[UV1]](s32)
  ; GFX908-NEXT:   $vgpr2 = PRED_COPY [[UV2]](s32)
  ; GFX908-NEXT:   $vgpr3 = PRED_COPY [[UV3]](s32)
  ; GFX908-NEXT:   $vgpr4 = PRED_COPY [[UV4]](s32)
  ; GFX908-NEXT:   $vgpr5 = PRED_COPY [[UV5]](s32)
  ; GFX908-NEXT:   $vgpr6 = PRED_COPY [[UV6]](s32)
  ; GFX908-NEXT:   $vgpr7 = PRED_COPY [[UV7]](s32)
  ; GFX908-NEXT:   $vgpr8 = PRED_COPY [[UV8]](s32)
  ; GFX908-NEXT:   $vgpr9 = PRED_COPY [[UV9]](s32)
  ; GFX908-NEXT:   $vgpr10 = PRED_COPY [[UV10]](s32)
  ; GFX908-NEXT:   $vgpr11 = PRED_COPY [[UV11]](s32)
  ; GFX908-NEXT:   $vgpr12 = PRED_COPY [[UV12]](s32)
  ; GFX908-NEXT:   $vgpr13 = PRED_COPY [[UV13]](s32)
  ; GFX908-NEXT:   $vgpr14 = PRED_COPY [[UV14]](s32)
  ; GFX908-NEXT:   $vgpr15 = PRED_COPY [[UV15]](s32)
  ; GFX908-NEXT:   $vgpr16 = PRED_COPY [[UV16]](s32)
  ; GFX908-NEXT:   $vgpr17 = PRED_COPY [[UV17]](s32)
  ; GFX908-NEXT:   $vgpr18 = PRED_COPY [[UV18]](s32)
  ; GFX908-NEXT:   $vgpr19 = PRED_COPY [[UV19]](s32)
  ; GFX908-NEXT:   $vgpr20 = PRED_COPY [[UV20]](s32)
  ; GFX908-NEXT:   $vgpr21 = PRED_COPY [[UV21]](s32)
  ; GFX908-NEXT:   $vgpr22 = PRED_COPY [[UV22]](s32)
  ; GFX908-NEXT:   $vgpr23 = PRED_COPY [[UV23]](s32)
  ; GFX908-NEXT:   $vgpr24 = PRED_COPY [[UV24]](s32)
  ; GFX908-NEXT:   $vgpr25 = PRED_COPY [[UV25]](s32)
  ; GFX908-NEXT:   $vgpr26 = PRED_COPY [[UV26]](s32)
  ; GFX908-NEXT:   $vgpr27 = PRED_COPY [[UV27]](s32)
  ; GFX908-NEXT:   $vgpr28 = PRED_COPY [[UV28]](s32)
  ; GFX908-NEXT:   $vgpr29 = PRED_COPY [[UV29]](s32)
  ; GFX908-NEXT:   $vgpr30 = PRED_COPY [[UV30]](s32)
  ; GFX908-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY18]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY9]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY11]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY14]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR1]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_v32i32, csr_amdgpu, implicit $vgpr0, implicit $vgpr1, implicit $vgpr2, implicit $vgpr3, implicit $vgpr4, implicit $vgpr5, implicit $vgpr6, implicit $vgpr7, implicit $vgpr8, implicit $vgpr9, implicit $vgpr10, implicit $vgpr11, implicit $vgpr12, implicit $vgpr13, implicit $vgpr14, implicit $vgpr15, implicit $vgpr16, implicit $vgpr17, implicit $vgpr18, implicit $vgpr19, implicit $vgpr20, implicit $vgpr21, implicit $vgpr22, implicit $vgpr23, implicit $vgpr24, implicit $vgpr25, implicit $vgpr26, implicit $vgpr27, implicit $vgpr28, implicit $vgpr29, implicit $vgpr30, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 4, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_v32i32(<32 x i32> zeroinitializer)
  ret void
}

define void @test_func_call_external_void_func_v32i32([17 x i8]) #0 {
  ; GFX900-LABEL: name: test_func_call_external_void_func_v32i32
  ; GFX900: bb.1 (%ir-block.1):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $sgpr15, $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11, $vgpr12, $vgpr13, $vgpr14, $vgpr15, $vgpr16, $vgpr31, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9, $sgpr10_sgpr11
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr31
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32(s32) = PRED_COPY $sgpr15
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr10_sgpr11
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s32) = PRED_COPY $vgpr0
  ; GFX900-NEXT:   [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY9]](s32)
  ; GFX900-NEXT:   [[TRUNC1:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC]](s16)
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY $vgpr1
  ; GFX900-NEXT:   [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY10]](s32)
  ; GFX900-NEXT:   [[TRUNC3:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC2]](s16)
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY $vgpr2
  ; GFX900-NEXT:   [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   [[TRUNC5:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC4]](s16)
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY $vgpr3
  ; GFX900-NEXT:   [[TRUNC6:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   [[TRUNC7:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC6]](s16)
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY $vgpr4
  ; GFX900-NEXT:   [[TRUNC8:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   [[TRUNC9:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC8]](s16)
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY $vgpr5
  ; GFX900-NEXT:   [[TRUNC10:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY14]](s32)
  ; GFX900-NEXT:   [[TRUNC11:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC10]](s16)
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY $vgpr6
  ; GFX900-NEXT:   [[TRUNC12:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY15]](s32)
  ; GFX900-NEXT:   [[TRUNC13:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC12]](s16)
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY $vgpr7
  ; GFX900-NEXT:   [[TRUNC14:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY16]](s32)
  ; GFX900-NEXT:   [[TRUNC15:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC14]](s16)
  ; GFX900-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY $vgpr8
  ; GFX900-NEXT:   [[TRUNC16:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY17]](s32)
  ; GFX900-NEXT:   [[TRUNC17:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC16]](s16)
  ; GFX900-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(s32) = PRED_COPY $vgpr9
  ; GFX900-NEXT:   [[TRUNC18:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY18]](s32)
  ; GFX900-NEXT:   [[TRUNC19:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC18]](s16)
  ; GFX900-NEXT:   [[PRED_COPY19:%[0-9]+]]:_(s32) = PRED_COPY $vgpr10
  ; GFX900-NEXT:   [[TRUNC20:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY19]](s32)
  ; GFX900-NEXT:   [[TRUNC21:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC20]](s16)
  ; GFX900-NEXT:   [[PRED_COPY20:%[0-9]+]]:_(s32) = PRED_COPY $vgpr11
  ; GFX900-NEXT:   [[TRUNC22:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY20]](s32)
  ; GFX900-NEXT:   [[TRUNC23:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC22]](s16)
  ; GFX900-NEXT:   [[PRED_COPY21:%[0-9]+]]:_(s32) = PRED_COPY $vgpr12
  ; GFX900-NEXT:   [[TRUNC24:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY21]](s32)
  ; GFX900-NEXT:   [[TRUNC25:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC24]](s16)
  ; GFX900-NEXT:   [[PRED_COPY22:%[0-9]+]]:_(s32) = PRED_COPY $vgpr13
  ; GFX900-NEXT:   [[TRUNC26:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY22]](s32)
  ; GFX900-NEXT:   [[TRUNC27:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC26]](s16)
  ; GFX900-NEXT:   [[PRED_COPY23:%[0-9]+]]:_(s32) = PRED_COPY $vgpr14
  ; GFX900-NEXT:   [[TRUNC28:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY23]](s32)
  ; GFX900-NEXT:   [[TRUNC29:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC28]](s16)
  ; GFX900-NEXT:   [[PRED_COPY24:%[0-9]+]]:_(s32) = PRED_COPY $vgpr15
  ; GFX900-NEXT:   [[TRUNC30:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY24]](s32)
  ; GFX900-NEXT:   [[TRUNC31:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC30]](s16)
  ; GFX900-NEXT:   [[PRED_COPY25:%[0-9]+]]:_(s32) = PRED_COPY $vgpr16
  ; GFX900-NEXT:   [[TRUNC32:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY25]](s32)
  ; GFX900-NEXT:   [[TRUNC33:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC32]](s16)
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[BUILD_VECTOR:%[0-9]+]]:_(<32 x s32>) = G_BUILD_VECTOR [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32)
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_v32i32
  ; GFX900-NEXT:   [[PRED_COPY26:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]]
  ; GFX900-NEXT:   [[PRED_COPY27:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   [[PRED_COPY28:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[PRED_COPY29:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY30:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY31:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY32:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[PRED_COPY33:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[PRED_COPY34:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32), [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32), [[UV6:%[0-9]+]]:_(s32), [[UV7:%[0-9]+]]:_(s32), [[UV8:%[0-9]+]]:_(s32), [[UV9:%[0-9]+]]:_(s32), [[UV10:%[0-9]+]]:_(s32), [[UV11:%[0-9]+]]:_(s32), [[UV12:%[0-9]+]]:_(s32), [[UV13:%[0-9]+]]:_(s32), [[UV14:%[0-9]+]]:_(s32), [[UV15:%[0-9]+]]:_(s32), [[UV16:%[0-9]+]]:_(s32), [[UV17:%[0-9]+]]:_(s32), [[UV18:%[0-9]+]]:_(s32), [[UV19:%[0-9]+]]:_(s32), [[UV20:%[0-9]+]]:_(s32), [[UV21:%[0-9]+]]:_(s32), [[UV22:%[0-9]+]]:_(s32), [[UV23:%[0-9]+]]:_(s32), [[UV24:%[0-9]+]]:_(s32), [[UV25:%[0-9]+]]:_(s32), [[UV26:%[0-9]+]]:_(s32), [[UV27:%[0-9]+]]:_(s32), [[UV28:%[0-9]+]]:_(s32), [[UV29:%[0-9]+]]:_(s32), [[UV30:%[0-9]+]]:_(s32), [[UV31:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[BUILD_VECTOR]](<32 x s32>)
  ; GFX900-NEXT:   [[AMDGPU_WAVE_ADDRESS:%[0-9]+]]:_(p5) = G_AMDGPU_WAVE_ADDRESS $sgpr32
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p5) = G_PTR_ADD [[AMDGPU_WAVE_ADDRESS]], [[C1]](s32)
  ; GFX900-NEXT:   G_STORE [[UV31]](s32), [[PTR_ADD]](p5) :: (store (s32) into stack, align 16, addrspace 5)
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[UV]](s32)
  ; GFX900-NEXT:   $vgpr1 = PRED_COPY [[UV1]](s32)
  ; GFX900-NEXT:   $vgpr2 = PRED_COPY [[UV2]](s32)
  ; GFX900-NEXT:   $vgpr3 = PRED_COPY [[UV3]](s32)
  ; GFX900-NEXT:   $vgpr4 = PRED_COPY [[UV4]](s32)
  ; GFX900-NEXT:   $vgpr5 = PRED_COPY [[UV5]](s32)
  ; GFX900-NEXT:   $vgpr6 = PRED_COPY [[UV6]](s32)
  ; GFX900-NEXT:   $vgpr7 = PRED_COPY [[UV7]](s32)
  ; GFX900-NEXT:   $vgpr8 = PRED_COPY [[UV8]](s32)
  ; GFX900-NEXT:   $vgpr9 = PRED_COPY [[UV9]](s32)
  ; GFX900-NEXT:   $vgpr10 = PRED_COPY [[UV10]](s32)
  ; GFX900-NEXT:   $vgpr11 = PRED_COPY [[UV11]](s32)
  ; GFX900-NEXT:   $vgpr12 = PRED_COPY [[UV12]](s32)
  ; GFX900-NEXT:   $vgpr13 = PRED_COPY [[UV13]](s32)
  ; GFX900-NEXT:   $vgpr14 = PRED_COPY [[UV14]](s32)
  ; GFX900-NEXT:   $vgpr15 = PRED_COPY [[UV15]](s32)
  ; GFX900-NEXT:   $vgpr16 = PRED_COPY [[UV16]](s32)
  ; GFX900-NEXT:   $vgpr17 = PRED_COPY [[UV17]](s32)
  ; GFX900-NEXT:   $vgpr18 = PRED_COPY [[UV18]](s32)
  ; GFX900-NEXT:   $vgpr19 = PRED_COPY [[UV19]](s32)
  ; GFX900-NEXT:   $vgpr20 = PRED_COPY [[UV20]](s32)
  ; GFX900-NEXT:   $vgpr21 = PRED_COPY [[UV21]](s32)
  ; GFX900-NEXT:   $vgpr22 = PRED_COPY [[UV22]](s32)
  ; GFX900-NEXT:   $vgpr23 = PRED_COPY [[UV23]](s32)
  ; GFX900-NEXT:   $vgpr24 = PRED_COPY [[UV24]](s32)
  ; GFX900-NEXT:   $vgpr25 = PRED_COPY [[UV25]](s32)
  ; GFX900-NEXT:   $vgpr26 = PRED_COPY [[UV26]](s32)
  ; GFX900-NEXT:   $vgpr27 = PRED_COPY [[UV27]](s32)
  ; GFX900-NEXT:   $vgpr28 = PRED_COPY [[UV28]](s32)
  ; GFX900-NEXT:   $vgpr29 = PRED_COPY [[UV29]](s32)
  ; GFX900-NEXT:   $vgpr30 = PRED_COPY [[UV30]](s32)
  ; GFX900-NEXT:   [[PRED_COPY35:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $sgpr0_sgpr1_sgpr2_sgpr3
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY35]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY26]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[PRED_COPY27]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PRED_COPY28]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY29]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY30]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY31]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY32]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[PRED_COPY33]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[PRED_COPY34]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_v32i32, csr_amdgpu, implicit $vgpr0, implicit $vgpr1, implicit $vgpr2, implicit $vgpr3, implicit $vgpr4, implicit $vgpr5, implicit $vgpr6, implicit $vgpr7, implicit $vgpr8, implicit $vgpr9, implicit $vgpr10, implicit $vgpr11, implicit $vgpr12, implicit $vgpr13, implicit $vgpr14, implicit $vgpr15, implicit $vgpr16, implicit $vgpr17, implicit $vgpr18, implicit $vgpr19, implicit $vgpr20, implicit $vgpr21, implicit $vgpr22, implicit $vgpr23, implicit $vgpr24, implicit $vgpr25, implicit $vgpr26, implicit $vgpr27, implicit $vgpr28, implicit $vgpr29, implicit $vgpr30, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 4, implicit-def $scc
  ; GFX900-NEXT:   SI_RETURN
  ; GFX908-LABEL: name: test_func_call_external_void_func_v32i32
  ; GFX908: bb.1 (%ir-block.1):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $sgpr15, $vgpr0, $vgpr1, $vgpr2, $vgpr3, $vgpr4, $vgpr5, $vgpr6, $vgpr7, $vgpr8, $vgpr9, $vgpr10, $vgpr11, $vgpr12, $vgpr13, $vgpr14, $vgpr15, $vgpr16, $vgpr31, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9, $sgpr10_sgpr11
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr31
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32(s32) = PRED_COPY $sgpr15
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr10_sgpr11
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:sgpr_64(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s32) = PRED_COPY $vgpr0
  ; GFX908-NEXT:   [[TRUNC:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY9]](s32)
  ; GFX908-NEXT:   [[TRUNC1:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC]](s16)
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY $vgpr1
  ; GFX908-NEXT:   [[TRUNC2:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY10]](s32)
  ; GFX908-NEXT:   [[TRUNC3:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC2]](s16)
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY $vgpr2
  ; GFX908-NEXT:   [[TRUNC4:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   [[TRUNC5:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC4]](s16)
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY $vgpr3
  ; GFX908-NEXT:   [[TRUNC6:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   [[TRUNC7:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC6]](s16)
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY $vgpr4
  ; GFX908-NEXT:   [[TRUNC8:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   [[TRUNC9:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC8]](s16)
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY $vgpr5
  ; GFX908-NEXT:   [[TRUNC10:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY14]](s32)
  ; GFX908-NEXT:   [[TRUNC11:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC10]](s16)
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY $vgpr6
  ; GFX908-NEXT:   [[TRUNC12:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY15]](s32)
  ; GFX908-NEXT:   [[TRUNC13:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC12]](s16)
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(s32) = PRED_COPY $vgpr7
  ; GFX908-NEXT:   [[TRUNC14:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY16]](s32)
  ; GFX908-NEXT:   [[TRUNC15:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC14]](s16)
  ; GFX908-NEXT:   [[PRED_COPY17:%[0-9]+]]:_(s32) = PRED_COPY $vgpr8
  ; GFX908-NEXT:   [[TRUNC16:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY17]](s32)
  ; GFX908-NEXT:   [[TRUNC17:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC16]](s16)
  ; GFX908-NEXT:   [[PRED_COPY18:%[0-9]+]]:_(s32) = PRED_COPY $vgpr9
  ; GFX908-NEXT:   [[TRUNC18:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY18]](s32)
  ; GFX908-NEXT:   [[TRUNC19:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC18]](s16)
  ; GFX908-NEXT:   [[PRED_COPY19:%[0-9]+]]:_(s32) = PRED_COPY $vgpr10
  ; GFX908-NEXT:   [[TRUNC20:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY19]](s32)
  ; GFX908-NEXT:   [[TRUNC21:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC20]](s16)
  ; GFX908-NEXT:   [[PRED_COPY20:%[0-9]+]]:_(s32) = PRED_COPY $vgpr11
  ; GFX908-NEXT:   [[TRUNC22:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY20]](s32)
  ; GFX908-NEXT:   [[TRUNC23:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC22]](s16)
  ; GFX908-NEXT:   [[PRED_COPY21:%[0-9]+]]:_(s32) = PRED_COPY $vgpr12
  ; GFX908-NEXT:   [[TRUNC24:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY21]](s32)
  ; GFX908-NEXT:   [[TRUNC25:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC24]](s16)
  ; GFX908-NEXT:   [[PRED_COPY22:%[0-9]+]]:_(s32) = PRED_COPY $vgpr13
  ; GFX908-NEXT:   [[TRUNC26:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY22]](s32)
  ; GFX908-NEXT:   [[TRUNC27:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC26]](s16)
  ; GFX908-NEXT:   [[PRED_COPY23:%[0-9]+]]:_(s32) = PRED_COPY $vgpr14
  ; GFX908-NEXT:   [[TRUNC28:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY23]](s32)
  ; GFX908-NEXT:   [[TRUNC29:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC28]](s16)
  ; GFX908-NEXT:   [[PRED_COPY24:%[0-9]+]]:_(s32) = PRED_COPY $vgpr15
  ; GFX908-NEXT:   [[TRUNC30:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY24]](s32)
  ; GFX908-NEXT:   [[TRUNC31:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC30]](s16)
  ; GFX908-NEXT:   [[PRED_COPY25:%[0-9]+]]:_(s32) = PRED_COPY $vgpr16
  ; GFX908-NEXT:   [[TRUNC32:%[0-9]+]]:_(s16) = G_TRUNC [[PRED_COPY25]](s32)
  ; GFX908-NEXT:   [[TRUNC33:%[0-9]+]]:_(s8) = G_TRUNC [[TRUNC32]](s16)
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[BUILD_VECTOR:%[0-9]+]]:_(<32 x s32>) = G_BUILD_VECTOR [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32), [[C]](s32)
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_v32i32
  ; GFX908-NEXT:   [[PRED_COPY26:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY8]]
  ; GFX908-NEXT:   [[PRED_COPY27:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   [[PRED_COPY28:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[PRED_COPY29:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY30:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY31:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY32:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[PRED_COPY33:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[PRED_COPY34:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[UV:%[0-9]+]]:_(s32), [[UV1:%[0-9]+]]:_(s32), [[UV2:%[0-9]+]]:_(s32), [[UV3:%[0-9]+]]:_(s32), [[UV4:%[0-9]+]]:_(s32), [[UV5:%[0-9]+]]:_(s32), [[UV6:%[0-9]+]]:_(s32), [[UV7:%[0-9]+]]:_(s32), [[UV8:%[0-9]+]]:_(s32), [[UV9:%[0-9]+]]:_(s32), [[UV10:%[0-9]+]]:_(s32), [[UV11:%[0-9]+]]:_(s32), [[UV12:%[0-9]+]]:_(s32), [[UV13:%[0-9]+]]:_(s32), [[UV14:%[0-9]+]]:_(s32), [[UV15:%[0-9]+]]:_(s32), [[UV16:%[0-9]+]]:_(s32), [[UV17:%[0-9]+]]:_(s32), [[UV18:%[0-9]+]]:_(s32), [[UV19:%[0-9]+]]:_(s32), [[UV20:%[0-9]+]]:_(s32), [[UV21:%[0-9]+]]:_(s32), [[UV22:%[0-9]+]]:_(s32), [[UV23:%[0-9]+]]:_(s32), [[UV24:%[0-9]+]]:_(s32), [[UV25:%[0-9]+]]:_(s32), [[UV26:%[0-9]+]]:_(s32), [[UV27:%[0-9]+]]:_(s32), [[UV28:%[0-9]+]]:_(s32), [[UV29:%[0-9]+]]:_(s32), [[UV30:%[0-9]+]]:_(s32), [[UV31:%[0-9]+]]:_(s32) = G_UNMERGE_VALUES [[BUILD_VECTOR]](<32 x s32>)
  ; GFX908-NEXT:   [[AMDGPU_WAVE_ADDRESS:%[0-9]+]]:_(p5) = G_AMDGPU_WAVE_ADDRESS $sgpr32
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p5) = G_PTR_ADD [[AMDGPU_WAVE_ADDRESS]], [[C1]](s32)
  ; GFX908-NEXT:   G_STORE [[UV31]](s32), [[PTR_ADD]](p5) :: (store (s32) into stack, align 16, addrspace 5)
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[UV]](s32)
  ; GFX908-NEXT:   $vgpr1 = PRED_COPY [[UV1]](s32)
  ; GFX908-NEXT:   $vgpr2 = PRED_COPY [[UV2]](s32)
  ; GFX908-NEXT:   $vgpr3 = PRED_COPY [[UV3]](s32)
  ; GFX908-NEXT:   $vgpr4 = PRED_COPY [[UV4]](s32)
  ; GFX908-NEXT:   $vgpr5 = PRED_COPY [[UV5]](s32)
  ; GFX908-NEXT:   $vgpr6 = PRED_COPY [[UV6]](s32)
  ; GFX908-NEXT:   $vgpr7 = PRED_COPY [[UV7]](s32)
  ; GFX908-NEXT:   $vgpr8 = PRED_COPY [[UV8]](s32)
  ; GFX908-NEXT:   $vgpr9 = PRED_COPY [[UV9]](s32)
  ; GFX908-NEXT:   $vgpr10 = PRED_COPY [[UV10]](s32)
  ; GFX908-NEXT:   $vgpr11 = PRED_COPY [[UV11]](s32)
  ; GFX908-NEXT:   $vgpr12 = PRED_COPY [[UV12]](s32)
  ; GFX908-NEXT:   $vgpr13 = PRED_COPY [[UV13]](s32)
  ; GFX908-NEXT:   $vgpr14 = PRED_COPY [[UV14]](s32)
  ; GFX908-NEXT:   $vgpr15 = PRED_COPY [[UV15]](s32)
  ; GFX908-NEXT:   $vgpr16 = PRED_COPY [[UV16]](s32)
  ; GFX908-NEXT:   $vgpr17 = PRED_COPY [[UV17]](s32)
  ; GFX908-NEXT:   $vgpr18 = PRED_COPY [[UV18]](s32)
  ; GFX908-NEXT:   $vgpr19 = PRED_COPY [[UV19]](s32)
  ; GFX908-NEXT:   $vgpr20 = PRED_COPY [[UV20]](s32)
  ; GFX908-NEXT:   $vgpr21 = PRED_COPY [[UV21]](s32)
  ; GFX908-NEXT:   $vgpr22 = PRED_COPY [[UV22]](s32)
  ; GFX908-NEXT:   $vgpr23 = PRED_COPY [[UV23]](s32)
  ; GFX908-NEXT:   $vgpr24 = PRED_COPY [[UV24]](s32)
  ; GFX908-NEXT:   $vgpr25 = PRED_COPY [[UV25]](s32)
  ; GFX908-NEXT:   $vgpr26 = PRED_COPY [[UV26]](s32)
  ; GFX908-NEXT:   $vgpr27 = PRED_COPY [[UV27]](s32)
  ; GFX908-NEXT:   $vgpr28 = PRED_COPY [[UV28]](s32)
  ; GFX908-NEXT:   $vgpr29 = PRED_COPY [[UV29]](s32)
  ; GFX908-NEXT:   $vgpr30 = PRED_COPY [[UV30]](s32)
  ; GFX908-NEXT:   [[PRED_COPY35:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $sgpr0_sgpr1_sgpr2_sgpr3
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY35]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY26]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[PRED_COPY27]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PRED_COPY28]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY29]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY30]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY31]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY32]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[PRED_COPY33]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[PRED_COPY34]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_v32i32, csr_amdgpu, implicit $vgpr0, implicit $vgpr1, implicit $vgpr2, implicit $vgpr3, implicit $vgpr4, implicit $vgpr5, implicit $vgpr6, implicit $vgpr7, implicit $vgpr8, implicit $vgpr9, implicit $vgpr10, implicit $vgpr11, implicit $vgpr12, implicit $vgpr13, implicit $vgpr14, implicit $vgpr15, implicit $vgpr16, implicit $vgpr17, implicit $vgpr18, implicit $vgpr19, implicit $vgpr20, implicit $vgpr21, implicit $vgpr22, implicit $vgpr23, implicit $vgpr24, implicit $vgpr25, implicit $vgpr26, implicit $vgpr27, implicit $vgpr28, implicit $vgpr29, implicit $vgpr30, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 4, implicit-def $scc
  ; GFX908-NEXT:   SI_RETURN
  call void @external_void_func_v32i32(<32 x i32> zeroinitializer)
  ret void
}

define amdgpu_kernel void @test_only_workitem_id_x() #0 !reqd_work_group_size !0 {
  ; GFX900-LABEL: name: test_only_workitem_id_x
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY8]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY14]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY9]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY10]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_only_workitem_id_x
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY8]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY14]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY9]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY10]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

define amdgpu_kernel void @test_only_workitem_id_y() #0 !reqd_work_group_size !1 {
  ; GFX900-LABEL: name: test_only_workitem_id_y
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr1, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY8]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY13]], [[C3]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[C2]], [[SHL]]
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY14]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY9]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY10]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_only_workitem_id_y
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr1, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY8]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY13]], [[C3]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[C2]], [[SHL]]
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY14]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY9]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY10]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

define amdgpu_kernel void @test_only_workitem_id_z() #0 !reqd_work_group_size !2 {
  ; GFX900-LABEL: name: test_only_workitem_id_z
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY8]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY13]], [[C3]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[C2]], [[SHL]]
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY14]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY9]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY10]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_only_workitem_id_z
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY8]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY13]], [[C3]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[C2]], [[SHL]]
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY14]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY9]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY10]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

define amdgpu_kernel void @test_only_workitem_id_xy() #0 !reqd_work_group_size !3 {
  ; GFX900-LABEL: name: test_only_workitem_id_xy
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr1, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY9]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY15]], [[C2]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY14]], [[SHL]]
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY16]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY10]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_only_workitem_id_xy
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr1, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY9]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY15]], [[C2]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY14]], [[SHL]]
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY16]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY10]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

define amdgpu_kernel void @test_only_workitem_id_yz() #0 !reqd_work_group_size !4 {
  ; GFX900-LABEL: name: test_only_workitem_id_yz
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr1, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY9]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY14]], [[C3]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[C2]], [[SHL]]
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX900-NEXT:   [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY15]], [[C4]](s32)
  ; GFX900-NEXT:   [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY16]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY10]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR1]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_only_workitem_id_yz
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr1, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr1
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY9]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 0
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[C3:%[0-9]+]]:_(s32) = G_CONSTANT i32 10
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY14]], [[C3]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[C2]], [[SHL]]
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C4:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX908-NEXT:   [[SHL1:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY15]], [[C4]](s32)
  ; GFX908-NEXT:   [[OR1:%[0-9]+]]:_(s32) = G_OR [[OR]], [[SHL1]]
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY16]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY10]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR1]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

define amdgpu_kernel void @test_only_workitem_id_xz() #0 !reqd_work_group_size !5 {
  ; GFX900-LABEL: name: test_only_workitem_id_xz
  ; GFX900: bb.1 (%ir-block.0):
  ; GFX900-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX900-NEXT: {{  $}}
  ; GFX900-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX900-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX900-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX900-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX900-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX900-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX900-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX900-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX900-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX900-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX900-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX900-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX900-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX900-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX900-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY9]], [[C1]](s64)
  ; GFX900-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX900-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX900-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX900-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX900-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX900-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX900-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX900-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX900-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY15]], [[C2]](s32)
  ; GFX900-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY14]], [[SHL]]
  ; GFX900-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX900-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX900-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY16]](<4 x s32>)
  ; GFX900-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX900-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX900-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX900-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY10]](s64)
  ; GFX900-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX900-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX900-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX900-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX900-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX900-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX900-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX900-NEXT:   S_ENDPGM 0
  ; GFX908-LABEL: name: test_only_workitem_id_xz
  ; GFX908: bb.1 (%ir-block.0):
  ; GFX908-NEXT:   liveins: $sgpr12, $sgpr13, $sgpr14, $vgpr0, $vgpr2, $sgpr4_sgpr5, $sgpr6_sgpr7, $sgpr8_sgpr9
  ; GFX908-NEXT: {{  $}}
  ; GFX908-NEXT:   [[PRED_COPY:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr2
  ; GFX908-NEXT:   [[PRED_COPY1:%[0-9]+]]:vgpr_32(s32) = PRED_COPY $vgpr0
  ; GFX908-NEXT:   [[PRED_COPY2:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr14
  ; GFX908-NEXT:   [[PRED_COPY3:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr13
  ; GFX908-NEXT:   [[PRED_COPY4:%[0-9]+]]:sgpr_32 = PRED_COPY $sgpr12
  ; GFX908-NEXT:   [[PRED_COPY5:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr8_sgpr9
  ; GFX908-NEXT:   [[PRED_COPY6:%[0-9]+]]:sgpr_64 = PRED_COPY $sgpr4_sgpr5
  ; GFX908-NEXT:   [[PRED_COPY7:%[0-9]+]]:_(p4) = PRED_COPY $sgpr6_sgpr7
  ; GFX908-NEXT:   [[C:%[0-9]+]]:_(s32) = G_CONSTANT i32 42
  ; GFX908-NEXT:   ADJCALLSTACKUP 0, 0, implicit-def $scc
  ; GFX908-NEXT:   [[GV:%[0-9]+]]:_(p0) = G_GLOBAL_VALUE @external_void_func_i32
  ; GFX908-NEXT:   [[PRED_COPY8:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY6]]
  ; GFX908-NEXT:   [[DEF:%[0-9]+]]:_(p4) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY9:%[0-9]+]]:_(p4) = PRED_COPY [[PRED_COPY7]](p4)
  ; GFX908-NEXT:   [[C1:%[0-9]+]]:_(s64) = G_CONSTANT i64 0
  ; GFX908-NEXT:   [[PTR_ADD:%[0-9]+]]:_(p4) = G_PTR_ADD [[PRED_COPY9]], [[C1]](s64)
  ; GFX908-NEXT:   [[PRED_COPY10:%[0-9]+]]:_(s64) = PRED_COPY [[PRED_COPY5]]
  ; GFX908-NEXT:   [[PRED_COPY11:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY4]]
  ; GFX908-NEXT:   [[PRED_COPY12:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY3]]
  ; GFX908-NEXT:   [[PRED_COPY13:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY2]]
  ; GFX908-NEXT:   [[DEF1:%[0-9]+]]:_(s32) = G_IMPLICIT_DEF
  ; GFX908-NEXT:   [[PRED_COPY14:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY1]](s32)
  ; GFX908-NEXT:   [[PRED_COPY15:%[0-9]+]]:_(s32) = PRED_COPY [[PRED_COPY]](s32)
  ; GFX908-NEXT:   [[C2:%[0-9]+]]:_(s32) = G_CONSTANT i32 20
  ; GFX908-NEXT:   [[SHL:%[0-9]+]]:_(s32) = G_SHL [[PRED_COPY15]], [[C2]](s32)
  ; GFX908-NEXT:   [[OR:%[0-9]+]]:_(s32) = G_OR [[PRED_COPY14]], [[SHL]]
  ; GFX908-NEXT:   $vgpr0 = PRED_COPY [[C]](s32)
  ; GFX908-NEXT:   [[PRED_COPY16:%[0-9]+]]:_(<4 x s32>) = PRED_COPY $private_rsrc_reg
  ; GFX908-NEXT:   $sgpr0_sgpr1_sgpr2_sgpr3 = PRED_COPY [[PRED_COPY16]](<4 x s32>)
  ; GFX908-NEXT:   $sgpr4_sgpr5 = PRED_COPY [[PRED_COPY8]](p4)
  ; GFX908-NEXT:   $sgpr6_sgpr7 = PRED_COPY [[DEF]](p4)
  ; GFX908-NEXT:   $sgpr8_sgpr9 = PRED_COPY [[PTR_ADD]](p4)
  ; GFX908-NEXT:   $sgpr10_sgpr11 = PRED_COPY [[PRED_COPY10]](s64)
  ; GFX908-NEXT:   $sgpr12 = PRED_COPY [[PRED_COPY11]](s32)
  ; GFX908-NEXT:   $sgpr13 = PRED_COPY [[PRED_COPY12]](s32)
  ; GFX908-NEXT:   $sgpr14 = PRED_COPY [[PRED_COPY13]](s32)
  ; GFX908-NEXT:   $sgpr15 = PRED_COPY [[DEF1]](s32)
  ; GFX908-NEXT:   $vgpr31 = PRED_COPY [[OR]](s32)
  ; GFX908-NEXT:   $sgpr30_sgpr31 = G_SI_CALL [[GV]](p0), @external_void_func_i32, csr_amdgpu, implicit $vgpr0, implicit $sgpr0_sgpr1_sgpr2_sgpr3, implicit $sgpr4_sgpr5, implicit $sgpr6_sgpr7, implicit $sgpr8_sgpr9, implicit $sgpr10_sgpr11, implicit $sgpr12, implicit $sgpr13, implicit $sgpr14, implicit $sgpr15, implicit $vgpr31
  ; GFX908-NEXT:   ADJCALLSTACKDOWN 0, 0, implicit-def $scc
  ; GFX908-NEXT:   S_ENDPGM 0
  call void @external_void_func_i32(i32 42)
  ret void
}

declare i32 @llvm.amdgcn.workitem.id.x() #1
declare i32 @llvm.amdgcn.workitem.id.y() #1
declare i32 @llvm.amdgcn.workitem.id.z() #1

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone speculatable willreturn }

!0 = !{i32 64, i32 1, i32 1}
!1 = !{i32 1, i32 64, i32 1}
!2 = !{i32 1, i32 1, i32 64}
!3 = !{i32 32, i32 2, i32 1}
!4 = !{i32 1, i32 32, i32 2}
!5 = !{i32 32, i32 1, i32 2}
